databaseChangeLog:  # This script is DEPRECATED -- it has been replaced by RolePopulator.  This has been removed from the changelog
  - changeSet:
      id: "add_initial_permissions"
      author: dbush
      changes:
        - addColumn:
            tableName: portal_admin_user_role
            columns:
              - column: { name: study_id, type: uuid, constraints:
                { foreignKeyName: fk_portal_admin_user_role_study, references: study(id) }
              }
        - sql:
            sql: insert into permission 
              (name, display_name, description, created_at, last_updated_at)
              values
              ('study_settings_edit', 'Study settings', 'Configure study settings password protection and enrollment', now(), now()),
              ('survey_edit', 'Survey form management', 'View, edit and configure surveys', now(), now()),
              ('consent_form_edit', 'Consent form management', 'View, edit and configure consent forms', now(), now()),
              ('site_content_edit', 'Site content management', 'View, edit and configure the portal website', now(), now()),
              ('team_roles_edit', 'Team role management', 'View and edit roles assigned to team members', now(), now());
        - sql:
            sql: insert into role
              (name, display_name, description, created_at, last_updated_at)
              values
              ('study_admin', 'Study admin', 'View and edit all aspects of a study', now(), now()),
              ('prototype_tester', 'Prototype access', 'Use features being prototyped', now(), now());
        - sql:
            sql: insert into role_permission
              (role_id, permission_id, created_at, last_updated_at)
              select role.id, permission.id, now(), now() from role 
              cross join permission 
              where role.name = 'study_admin'
              and permission.name != 'team_roles_edit';
        - sql:
            sql: insert into role_permission
              (role_id, permission_id, created_at, last_updated_at)
              select role.id, permission.id, now(), now() from role
              cross join permission
              where role.name = 'prototype_tester'
              and permission.name = 'team_roles_edit';
        - sql:
            sql: insert into portal_admin_user_role 
              (portal_admin_user_id, role_id, study_id, created_at, last_updated_at)
              select portal_admin_user.id, role.id, null, now(), now() from portal_admin_user 
              join admin_user on portal_admin_user.admin_user_id = admin_user.id
              cross join role
              where admin_user.superuser = false
              and role.name = 'study_admin';
