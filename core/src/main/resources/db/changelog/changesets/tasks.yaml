databaseChangeLog:
  - changeSet:
      id: "tasks"
      author: dbush
      changes:
        - createTable:
            tableName: participant_task
            columns:
              - column: &idColumn
                  { name: id, type: uuid, defaultValueComputed: gen_random_uuid(), constraints: { nullable: false, primaryKey: true } }
              - column: &createdAt
                  { name: created_at, type: datetime, constraints: { nullable: false } }
              - column: &lastUpdatedAt
                  { name: last_updated_at, type: datetime, constraints: { nullable: false } }
              - column: { name: status, type: text, constraints: { nullable: false }}
              - column: { name: participant_actionable, type: boolean, defaultValueBoolean: true, constraints: { nullable: false }}
              - column: { name: completed_at, type: datetime }
              - column: { name: task_type, type: text, constraints: { nullable: false }}
              - column: { name: target_name, type: text, constraints: { nullable: false } }
              - column: { name: target_stable_id, type: text}
              - column: { name: target_assigned_version, type: integer}
              - column: { name: target_completed_version, type: integer}
              - column: { name: task_order, type: integer}
              - column: { name: blocks_hub, type: boolean, defaultValueBoolean: false, constraints: { nullable: false }}
              - column: { name: study_environment_id, type: uuid, constraints:
                { foreignKeyName: fk_task_study_environment, references: study_environment(id) }
              }
              - column: { name: enrollee_id, type: uuid, constraints:
                { foreignKeyName: fk_task_enrollee, references: enrollee(id) }
              }
              - column: { name: portal_participant_user_id, type: uuid, constraints:
                { nullable: false, foreignKeyName: fk_task_portal_participant_user, references: portal_participant_user(id) }
              }
              - column: { name: survey_response_id, type: uuid, constraints:
                { foreignKeyName: fk_task_survey_response, references: survey_response(id) }
              }
              - column: { name: consent_response_id, type: uuid, constraints:
                { foreignKeyName: fk_task_consent_response, references: consent_response(id) }
              }
        - createIndex:  # task list will grow large, index by portal_participant_user_id since that's how we'll fetch hubs
            tableName: participant_task
            indexName: idx_task_portal_participant_user_id
            columns:
              - column:
                  descending: true
                  name: portal_participant_user_id
        - createIndex: # task list will grow large, index by enrollee_id since that's how we'll process enrollee logic
            tableName: participant_task
            indexName: idx_task_enrollee_id
            columns:
              - column:
                  descending: true
                  name: enrollee_id



