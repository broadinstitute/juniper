databaseChangeLog:
  - changeSet:
      id: "survey_fields"
      author: dbush
      changes:
        - addColumn:
            tableName: survey
            columns:
              - column: { name: eligibility_rule, type: text }
              - column: { name: required, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
              - column: { name: allow_admin_edit, type: boolean, defaultValueBoolean: true, constraints: { nullable: false } }
              - column: { name: allow_participant_start, type: boolean, defaultValueBoolean: true, constraints: { nullable: false } }
              - column: { name: allow_participant_reedit, type: boolean, defaultValueBoolean: true, constraints: { nullable: false } }
              - column: { name: prepopulate, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
              - column: { name: recur, type: boolean, defaultValueBoolean: false, constraints: { nullable: false } }
              - column: { name: recurrence_interval_days, type: integer }
              - column: { name: days_after_eligible, type: integer }
        - sql:
            sql: |
              update survey set 
                a.eligibility_rule = b.eligibility_rule, 
                a.allow_admin_edit = b.allow_admin_edit, 
                a.allow_participant_start = b.allow_participant_start, 
                a.allow_participant_reedit = b.allow_participant_reedit,
                a.prepopulate = b.prepopulate, 
                a.recur = b.recur, 
                a.recurrence_interval_days = b.recurrence_interval_days, 
                a.days_after_eligible = b.days_after_eligible, 
                a.required = b.required
              from survey a join study_environment_survey b on a.id = b.survey_id;
        - dropColumn:
            tableName: study_environment_survey
            columns:
              - column: { name: eligibility_rule }
              - column: { name: allow_admin_edit }
              - column: { name: allow_participant_start }
              - column: { name: allow_participant_reedit }
              - column: { name: prepopulate }
              - column: { name: recur }
              - column: { name: recurrence_interval_days }
              - column: { name: days_after_eligible }
              - column: { name: survey_id }
              - column: { name: required }
        - addColumn:
            tableName: trigger
            columns:
              - column: { name: survey_id, type: uuid, constraints:
                { foreignKeyName: fk_trigger_survey, references: survey(id) }
              }
        - dropColumn:  # this was previously unused, and we now link to the survey itself
            tableName: trigger
            columnName: task_target_stable_id
