plugins {
    id "io.freefair.lombok" version "8.7.1"
    id 'java'
    id 'org.liquibase.gradle' version '2.1.0'
    id "java-test-fixtures"
    id 'jacoco'
    id 'antlr'
}

group = 'bio.terra.pearl.core'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/artifactory/plugins-snapshot'
    }
}

dependencies {
    antlr "org.antlr:antlr4:4.13.1"
    compileOnly "org.antlr:antlr4-runtime:4.13.1"

    implementation 'org.springframework.boot:spring-boot-starter:3.2.5'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.5'
    implementation group: 'org.jdbi', name: 'jdbi3-spring5', version: '3.34.0'
    implementation group: 'org.jdbi', name: 'jdbi3-sqlobject', version: '3.34.0'
    implementation group: 'org.jdbi', name: 'jdbi3-postgres', version: '3.34.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:3.2.5'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.2.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.5'
    implementation 'org.springframework.retry:spring-retry:1.3.4'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'org.liquibase:liquibase-core:4.21.1'
    implementation 'org.yaml:snakeyaml:2.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    implementation 'com.sendgrid:sendgrid-java:4.0.1'
    implementation 'com.auth0:java-jwt:4.2.2'
    implementation group: "bio.terra", name: "datarepo-jakarta-client", version: "1.565.0-SNAPSHOT"
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.18.0'
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation 'com.azure:azure-storage-blob:12.25.4'
    implementation 'com.smartystreets.api:smartystreets-java-sdk:3.16.1'
    implementation 'org.jooq:jooq:3.19.6'
    implementation 'com.mixpanel:mixpanel-java:1.5.3'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.21.1'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'ch.qos.logback:logback-classic'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
    testImplementation 'com.github.seregamorph:hamcrest-more-matchers:0.1'

    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'
    testFixturesImplementation 'org.apache.commons:commons-text:1.10.0'
    testFixturesImplementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
}

generateGrammarSource {
    maxHeapSize = "128m"

    def antlrOutputLanguage = project.hasProperty('AntlrOutputLanguage') ? project.property('AntlrOutputLanguage') : 'Java'

    switch (antlrOutputLanguage) {
        case "Java":
            arguments += ['-package', 'bio.terra.pearl.core.antlr', '-visitor', '-no-listener']
            break
        case "TypeScript":
            outputDirectory = file('../ui-admin/src/generated/search-exp-parser')
            arguments += ['-visitor', '-no-listener', '-Dlanguage=TypeScript', '-Xexact-output-dir']
            break
    }

}
compileJava.dependsOn generateGrammarSource
sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java

test {
    useJUnitPlatform {
        // By default, exclude `@IntegrationTest`s
        excludeTags "integration"
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

// Explicitly run `@IntegrationTest`s that are excluded from default test runs: `./gradlew integrationTest`
tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
    mustRunAfter check
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-parameters"
}
