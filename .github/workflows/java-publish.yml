name: Publish and deploy
on:
  push:
    branches: [ development ]
    paths-ignore: [ '*.md' ]
  pull_request:
    branches: [ '**' ]

env:
  SERVICE_NAME: ${{ github.event.repository.name }}
  GOOGLE_PROJECT: broad-dsp-gcr-public
  GOOGLE_DOCKER_REPOSITORY: us-central1-docker.pkg.dev

jobs:
  publish-job:
    permissions:
      contents: 'read'
      id-token:  'write'
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout Current Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BROADBOT_TOKEN }}
      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'
      
      - name: Bump Version
        uses: databiosphere/github-actions/actions/bumper@bumper-0.0.6
        id: tag
        env:
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: ${{ github.event.repository.default_branch }}
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          VERSION_FILE_PATH: settings.gradle
          VERSION_LINE_MATCH: "^\\s*gradle.ext.releaseVersion\\s*=\\s*'.*'"
      
      - name: Auth to Google
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider
          service_account: 'dsp-artifact-registry-push@dsp-artifact-registry.iam.gserviceaccount.com'
      
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker $GOOGLE_DOCKER_REPOSITORY --quiet

      - name: Construct docker image name and tag
        id: image-name
        run: echo "name=${GOOGLE_DOCKER_REPOSITORY}/${GOOGLE_PROJECT}/${IMAGE_REPOSITORY_NAME}/${SERVICE_NAME}:${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
      
      - name: Build image locally with jib
        run: |
          ./gradlew --build-cache :api-admin:jibDockerBuild \
          --image=${{ steps.image-name.outputs.name }} \
          -Djib.console=plain
      
      - name: Run Trivy Vulnerability Scan
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.name }}

      - name: Push GCR image
        run: docker push ${{ steps.image-name.outputs.name }}
      



