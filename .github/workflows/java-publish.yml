name: Publish and deploy
on: create

env:
  SERVICE_NAME: ${{ github.event.repository.name }}
  GOOGLE_PROJECT: dsp-artifact-registry
  GOOGLE_DOCKER_REPOSITORY: us-central1-docker.pkg.dev
  IMAGE_REPOSITORY_NAME: ddp

jobs:
  publish-job:
    permissions:
      contents: 'read'
      id-token:  'write'
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout Current Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BROADBOT_TOKEN }}
      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'
      
      - name: Parse tag
        id: tag
        run: echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT
      
      - name: Auth to Google
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/1038484894585/locations/global/workloadIdentityPools/github-wi-pool/providers/github-wi-provider
          service_account: 'dsp-artifact-registry-push@dsp-artifact-registry.iam.gserviceaccount.com'
      
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Explicitly auth Docker for GCR
        run: gcloud auth configure-docker $GOOGLE_DOCKER_REPOSITORY --quiet

      - name: Construct docker image name and tag
        id: image-name
        run: echo "name=${GOOGLE_DOCKER_REPOSITORY}/${GOOGLE_PROJECT}/${IMAGE_REPOSITORY_NAME}/${SERVICE_NAME}:${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
      
      - name: Build image locally with jib
        run: |
          ./gradlew --build-cache :api-admin:jibDockerBuild \
          --image=${{ steps.image-name.outputs.name }} \
          -Djib.console=plain
      
      - name: Run Trivy Vulnerability Scan
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.name }}

      - name: Push GCR image
        run: docker push ${{ steps.image-name.outputs.name }}
      
      # - name: Notify slack on failure
      #   uses: broadinstitute/action-slack@v3.8.0
      #   if: failure()
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   with:
      #     channel: '#your_channel'
      #     status: failure
      #     author_name: Publish to dev
      #     fields: job
      #     text: 'Publish failed :sadpanda:'
      #     username: 'Terra Java Project Template GitHub Action'
  
  # Uncomment once we have a dev deployment running to start reporting new builds and auto-deploying them
  # via dsp-devops tooling
  #
  # Hey! You'll probably want to uncomment below this point: it deploys newly published versions to dev!
  #
  # You'll need to create a new chart entry in Beehive first, at https://broad.io/beehive/charts/new (chart 
  # names can't be changed, so be sure beforehand). Replace 'javatemplate' below with whatever name you choose.
  #
  # You'll also need to add some access to your new repo to allow it to run these steps. We have docs on the
  # whole process here: https://docs.google.com/document/d/1lkUkN2KOpHKWufaqw_RIE7EN3vN4G2xMnYBU83gi8VA/edit#heading=h.ipfs1speial
  #
  # Lastly, the deployment part won't work until your app has an actual chart and is deployed in dev. We can
  # help with that, ping #dsp-devops-champions and we can point you in the right direction.
  #

  # report-to-sherlock:
  #   # Report new version to Broad DevOps
  #   uses: broadinstitute/sherlock/.github/workflows/client-report-app-version.yaml@main
  #   needs: publish-job
  #   with:
  #     new-version: ${{ needs.publish-job.outputs.tag }}
  #     chart-name: 'javatemplate'
  #   permissions:
  #     contents: 'read'
  #     id-token: 'write'

  # set-version-in-dev:
  #   # Put new version in Broad dev environment
  #   uses: broadinstitute/sherlock/.github/workflows/client-set-environment-app-version.yaml@main
  #   needs: [publish-job, report-to-sherlock]
  #   with:
  #     new-version: ${{ needs.publish-job.outputs.tag }}
  #     chart-name: 'javatemplate'
  #     environment-name: 'dev'
  #   secrets:
  #     sync-git-token: ${{ secrets.BROADBOT_TOKEN }}
  #   permissions:
  #     id-token: 'write'
