plugins {
    id 'com.github.node-gradle.node' version '5.0.0'
    id "jacoco"
    id 'org.sonarqube'
}

apply plugin: 'base'
apply plugin: 'com.github.node-gradle.node'

task buildUICore(type: NpmTask, dependsOn: npmInstall) {
    args = ['--workspace=ui-core', 'run', 'build']
}

task bundleAdminUI(type: NpmTask, dependsOn: [npmInstall, buildUICore]) {
    args = ['--workspace=ui-admin', 'run', 'build']
}

task bundleParticipantUI(type: NpmTask, dependsOn: [npmInstall, buildUICore]) {
    args = ['--workspace=ui-participant', 'run', 'build']
}

sonar {
    properties {
        property 'sonar.projectName', "${rootProject.name}"
        property 'sonar.projectKey', "broadinstitute_${rootProject.name}"
        property 'sonar.organization', 'dsp-appsec'
        property 'sonar.host.url', 'https://sonarcloud.io'
        def jacocoXmlReports = []
        fileTree(dir: "${project.rootDir}", includes: ['**/build/reports/jacoco/test/jacocoTestReport.xml']).each { File file ->
            jacocoXmlReports.add(file.absolutePath)
        }
        property 'sonar.coverage.jacoco.xmlReportPaths', jacocoXmlReports.join(',')
    }
}

subprojects {
    apply plugin: 'org.sonarqube'
    sonar {
        println("Sonar xmlReportPath: ${project.buildDir}")
        properties {
            property 'sonar.sources', 'src/main/java,src/main/resources'
            def jacocoXmlReports = []
            fileTree(dir: "${project.rootDir}", includes: ['**/build/reports/jacoco/test/jacocoTestReport.xml']).each { File file ->
                jacocoXmlReports.add(file.absolutePath)
            }
            property 'sonar.coverage.jacoco.xmlReportPaths', jacocoXmlReports.join(',')
        }
    }
}
